@model AS_Therapy_GL.Models.AslCompany

@{
    ViewBag.Title = "Edit";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }
    //Remote validation binding(checking validation)
    Html.EnableClientValidation(false);

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    if (LoggedUserTp == "AslSuperadmin" && LoggedUserStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }


    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem { Text = "Active", Value = "A" });
    listItems.Add(new SelectListItem { Text = "Inactive", Value = "I" });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.AslCompanyId)
    @Html.HiddenFor(model => model.COMPID)

    <div id="contentHeaderBox">
        <h1>Update Company Information</h1>
    </div>
    <br/>
    <div class="col-md-12">
        @if (ViewBag.Message != null)
        {
            <div class="panel-heading text-center">
                <h4 style="color: #226699">@ViewBag.Message</h4>
            </div>
        }
        
        <div class="form-group">

            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.COMPNM, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.COMPNM, htmlAttributes: new { @class = "form-control", data_val = false, @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.COMPNM, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new {@class = "control-label"})
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ADDRESS, htmlAttributes: new {@class = "form-control", autofocus = true})
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new {@class = "text-danger"})
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.ADDRESS2, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ADDRESS2, htmlAttributes: new { @class = "form-control", maxlength = "90" })
                    @Html.ValidationMessageFor(model => model.ADDRESS2, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.CONTACTNO, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.CONTACTNO, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CONTACTNO, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.EMAILID, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EMAILID, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMAILID, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.WEBID, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.WEBID, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.WEBID, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.STATUS, listItems, "--Select STATUS--", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Promotion Email ID: ", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EMAILIDP, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMAILIDP, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Promotion Email Password: ", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EMAILPWP, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.EMAILPWP, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Promotion SMS ID: ", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.SMSIDP, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.SMSIDP, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Promotion SMS Password: ", htmlAttributes: new {@class = "control-label"})
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.SMSPWP, htmlAttributes: new {@class = "form-control"})
                    @Html.ValidationMessageFor(model => model.SMSPWP, "", new {@class = "text-danger"})
                </div>
            </div>

            @Html.HiddenFor(model => model.USERPC)
            @Html.HiddenFor(model => model.INSUSERID)
            @Html.HiddenFor(model => model.INSTIME)
            @Html.HiddenFor(model => model.INSIPNO)
            @Html.HiddenFor(model => model.INSLTUDE)

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-5">
                    <input type="submit" class="btn btn-primary btn-block" value="Update" />
                </div>

            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    <h4>@Html.ActionLink("Back to List", "Index")</h4>
                </div>
            </div>

        </div>
        </div>
    
    



    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }

            //function positionError(position) {
            //    alert("!!! Error: "+position.code);
            //}
        });
    </script>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
