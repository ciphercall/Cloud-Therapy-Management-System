@using System.Data
@using System.Data.SqlClient
@using AS_Therapy_GL.Models
@model AS_Therapy_GL.Models.AslUserco

@{
    ViewBag.Title = "UpdateDeleteForm";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }
    
    //Remote validation binding(checking validation)
    //Html.EnableClientValidation(false);

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    Therapy_GL_DbContext db = new Therapy_GL_DbContext();


    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User" || LoggedUserTp == "AslSuperadmin") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }


    List<SelectListItem> listStatus = new List<SelectListItem>();
    listStatus.Add(new SelectListItem { Text = "Active", Value = "A" });
    listStatus.Add(new SelectListItem { Text = "Inactive", Value = "I" });

    List<SelectListItem> listLogInBy = new List<SelectListItem>();
    listLogInBy.Add(new SelectListItem { Text = "Mobile Number", Value = "MOBNO" });
    listLogInBy.Add(new SelectListItem { Text = "Email Address", Value = "EMAIL" });

    List<SelectListItem> listOpTp = new List<SelectListItem>();
    if (LoggedUserTp == "CompanyAdmin")
    {
        listOpTp.Add(new SelectListItem { Text = "Company Admin", Value = "CompanyAdmin" });
        listOpTp.Add(new SelectListItem { Text = "User Admin", Value = "UserAdmin" });
        listOpTp.Add(new SelectListItem { Text = "User", Value = "User" });
    }
    else
    {
        listOpTp.Add(new SelectListItem { Text = "User Admin", Value = "UserAdmin" });
        listOpTp.Add(new SelectListItem { Text = "User", Value = "User" });
    }


    //User ID: [ ] , Login ID Field loaded in DropdownList
    Int64 compid = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    List<SelectListItem> aslUsercos = new List<SelectListItem>();
    var result = (from n in db.AslUsercoDbSet
                  where n.COMPID == compid
                  select n).ToList();

    if (LoggedUserTp == "CompanyAdmin")
    {
        foreach (var n in result)
        {
            AslUserco aslUserco = db.AslUsercoDbSet.FirstOrDefault(e => e.USERID == n.USERID);
            if (aslUserco != null)
            {
                aslUsercos.Add(new SelectListItem { Text = aslUserco.LOGINID, Value = aslUserco.USERID.ToString() });
            }
        }
    }
    else if (LoggedUserTp == "UserAdmin")
    {
        foreach (var n in result)
        {
            AslUserco aslUserco = db.AslUsercoDbSet.FirstOrDefault(e => e.USERID == n.USERID && e.OPTP != "CompanyAdmin");
            if (aslUserco != null)
            {
                aslUsercos.Add(new SelectListItem { Text = aslUserco.LOGINID, Value = aslUserco.USERID.ToString() });
            }
        }
    }
    
    
    var createStatus = "";
    var updateStatus = "";
    var deleteStatus = "";
    var status = "";

    System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["Therapy_GL_DbContext"].ToString());

    string query = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='AslUserCo' AND COMPID='{0}' AND USERID = '{1}'", LoggedCompId, loggedUserID);

    System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand(query, conn);
    conn.Open();

    SqlDataAdapter da = new SqlDataAdapter(cmd);
    DataTable ds = new DataTable();
    da.Fill(ds);

    foreach (DataRow row in ds.Rows)
    {
        status = row["STATUS"].ToString();
        createStatus = row["INSERTR"].ToString();
        updateStatus = row["UPDATER"].ToString();
        deleteStatus = row["DELETER"].ToString();
    }

    conn.Close();


    if (updateStatus == "A")
    {

    }
    else if (createStatus == "A")
    {
        Response.Redirect("~/AslUserCo/Create");
    }
    else if (deleteStatus == "A")
    {
        Response.Redirect("~/AslUserCo/DeleteForm");
    }

    if (updateStatus == "I")
    {
        Response.Redirect("~/GraphView/Index");
    }

}
<link href="~/Content/bootstrap-3.2.0-dist/css/bootstrap-theme.css" rel="stylesheet" />
<script src="~/Content/bootstrap-3.2.0-dist/js/bootstrap.js"></script>
@*bootstrap -Clock Picker*@
<link href="~/Content/bootstrap-clockpicker/src/clockpicker.css" rel="stylesheet" />
<script src="~/Content/bootstrap-clockpicker/src/clockpicker.js"></script>
<link href="~/Content/bootstrap-clockpicker/src/standalone.css" rel="stylesheet" />


@using (Html.BeginForm("UpdateForm", "AslUserco", FormMethod.Post, new { id = "submitForm" }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    @Html.HiddenFor(model => model.AslUsercoId, new { id = "HiddentxtAslUserCoId" })
    @Html.HiddenFor(model => model.COMPID, new { id = "HiddentxtCompanyID" })

     <div id="contentHeaderBox">
        <h1>Update User Information</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">
                @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("Create", "AslUserCo")"><i class="fa fa-plus"></i> Create</a>
                    </li>
                    <li>
                        <a href="@Url.Action("UpdateForm", "AslUserCo")"><i class="fa fa-edit"></i> Update</a>
                    </li>
                    <li>
                        <a href="@Url.Action("DeleteForm", "AslUserCo")"><i class="fa fa-times"></i> Delete</a>
                    </li>
                }
                else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("UpdateForm", "AslUserCo")"><i class="fa fa-edit"></i> Update</a>
                    </li>
                    <li>
                        <a href="@Url.Action("DeleteForm", "AslUserCo")"><i class="fa fa-times"></i> Delete</a>
                    </li>
                }
                else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("Create", "AslUserCo")"><i class="fa fa-plus"></i> Create</a>
                    </li>
                    <li>
                        <a href="@Url.Action("UpdateForm", "AslUserCo")"><i class="fa fa-edit"></i> Update</a>
                    </li>
                }
                else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("Create", "AslUserCo")"><i class="fa fa-plus"></i> Create</a>
                    </li>
                    <li>
                        <a href="@Url.Action("DeleteForm", "AslUserCo")"><i class="fa fa-times"></i> Delete</a>
                    </li>
                }
                else if (createStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("Create", "AslUserCo")"><i class="fa fa-plus"></i> Create</a>
                    </li>
                }
                else if (updateStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("UpdateForm", "AslUserCo")"><i class="fa fa-edit"></i> Update</a>
                    </li>
                }
                else if (deleteStatus == 'A'.ToString())
                {
                    <li>
                        <a href="@Url.Action("DeleteForm", "AslUserCo")"><i class="fa fa-times"></i> Delete</a>
                    </li>
                }
            </ul>
        </div>
    </div>
    <br />

    <div class="col-md-12">

        @if (TempData["UserUpdateMessage"] != null)
        {
            <div class="panel-heading text-center">
                <h4 style="color: #226699">@TempData["UserUpdateMessage"]</h4>
            </div>
        }

        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "User Login ID", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.USERID, aslUsercos, "--Select UserName--", new { id = "txtLoginID", @class = "form-control", autofocus = true })
                    @*@Html.ValidationMessageFor(model => model.AslUserco.USERNM, "", new { @class = "text-danger" })*@

                </div>
            </div>


            <br />
            <div class="row">
                <div class="col-md-3">
                   @Html.Label("name", "User Name")
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.USERNM, htmlAttributes: new { id = "txtuserNameID", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.USERNM, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.DEPTNM, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.DEPTNM, htmlAttributes: new { id = "txtDepartmentNameID", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DEPTNM, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.OPTP, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.OPTP, listOpTp, "--Select Operation Type--", htmlAttributes: new { id = "txtOperationTypeID", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.OPTP, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ADDRESS, htmlAttributes: new { id = "txtAddressID", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.MOBNO, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.MOBNO, htmlAttributes: new { id = "txtMobileID", @class = "form-control", @data_val = "false" })
                    @Html.ValidationMessageFor(model => model.MOBNO, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.EMAILID, htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EMAILID, htmlAttributes: new { id = "txtEmailID", @class = "form-control", @data_val = "false" })
                    @Html.ValidationMessageFor(model => model.EMAILID, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.LOGINBY, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.LOGINBY, listLogInBy, "--Select LOGINBY--", htmlAttributes: new { id = "dropdownBoxId", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LOGINBY, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.LOGINID, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.LOGINID, htmlAttributes: new { id = "txtloginID", @class = "form-control", @readonly = "readonly", @data_val = "false" })
                    @Html.ValidationMessageFor(model => model.LOGINID, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.LOGINPW, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.PasswordFor(model => model.LOGINPW, htmlAttributes: new { id = "txtpasswordID", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LOGINPW, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.TIMEFR, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <div class="input-group clockpicker" data-align="top" data-autoclose="true">
                        @Html.TextBoxFor(model => model.TIMEFR, htmlAttributes: new { id = "txtTimeForID", @class = "form-control", @Value = "00:01" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-time"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.TIMEFR, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.TIMETO, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    <div class="input-group clockpicker" data-align="top" data-autoclose="true">
                        @Html.TextBoxFor(model => model.TIMETO, htmlAttributes: new { id = "txtTimeToID", @class = "form-control", @Value = "23:59" })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-time"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.TIMETO, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.STATUS, listStatus, "--Select STATUS--", htmlAttributes: new { id = "ddldropStatusId", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.USERPC)
            @Html.HiddenFor(model => model.INSTIME, new { id = "HiddentxtInstime" })
            @Html.HiddenFor(model => model.INSIPNO, new { id = "HiddentxtInsipno" })
            @Html.HiddenFor(model => model.INSLTUDE, new { id = "HiddentxtInsltude" })
            @Html.HiddenFor(model => model.INSUSERID, new { id = "HiddentxtInsuserId" })

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />

            <br />
            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <input type="submit" class="btn btn-primary btn-block" name="command" value="Update" />

                </div>
            </div>


        </div>
    </div>

    
  

    //datatime picker script
    <script type="text/javascript">
        $('.clockpicker').clockpicker();
    </script>



    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });


        //passing value from textBox(Mobile Number,Email ID) to another textBox(Login By phoneNo/EmailId?) by selected dropdownList
        $(function () {
            $('#dropdownBoxId').change(function () {
                // gets the value from the drop down box
                var selected = $("#dropdownBoxId option:selected").text();

                var txtMobile = $("#txtMobileID").val();
                var txtEmail = $("#txtEmailID").val();
                // puts the value into the textbox
                var txtBox = document.getElementById('txtloginID');

                if (selected == "Mobile Number") {
                    txtBox.value = txtMobile;
                }
                else if (selected == "Email Address") {
                    txtBox.value = txtEmail;
                }
            });
        });




        //When login ID dropdown value selected then whole textbox fill loaded from database in specific user Information.
        $(function () {
            //1. Login ID: [    ]Dropdown box
            $('#txtLoginID').change(function () {
                //When the UserName (Dropdown list) changed then get the "User ID" from "ASLUSERCO" table
                var changedDropDown = $('#txtLoginID option:selected').val();

                var hiddentxtAsluserco = document.getElementById('HiddentxtAslUserCoId');
                var hiddentxtCompanyID = document.getElementById('HiddentxtCompanyID');
                var txtuserName = document.getElementById('txtuserNameID');
                var txtdepartmentName = document.getElementById('txtDepartmentNameID');
                var txtOperationType = document.getElementById('txtOperationTypeID');
                var txtAddress = document.getElementById('txtAddressID');
                var txtMobile = document.getElementById('txtMobileID');
                var txtEmail = document.getElementById('txtEmailID');
                var dropdownBox = document.getElementById('dropdownBoxId');
                var txtlogin = document.getElementById('txtloginID');
                var txtpassword = document.getElementById('txtpasswordID');
                var txtTimeFor = document.getElementById('txtTimeForID');
                var txtTimeTo = document.getElementById('txtTimeToID');
                var ddldropStatus = document.getElementById('ddldropStatusId');
                var txtInseruserId = document.getElementById('HiddentxtInsuserId');
                var txtInsertime = document.getElementById('HiddentxtInstime');
                var txtinslutude = document.getElementById('HiddentxtInsltude');
                var txtinseripno = document.getElementById('HiddentxtInsipno');

                $.getJSON(
                   "/AslUserco/GetUserInformation", { "ChangedDropDown": changedDropDown },
                   function (myData) {
                       hiddentxtAsluserco.value = myData.ASLUSERCOID;
                       hiddentxtCompanyID.value = myData.COMPID;
                       txtuserName.value = myData.USERNAME;
                       txtdepartmentName.value = myData.DEPTNM;
                       txtOperationType.value = myData.OPTP;
                       txtAddress.value = myData.ADDRESS;
                       txtMobile.value = myData.MOBNO;
                       txtEmail.value = myData.EMAILID;
                       dropdownBox.value = myData.LOGINBY;
                       txtlogin.value = myData.LOGINID;
                       txtpassword.value = myData.LOGINPASSWORD;
                       txtTimeFor.value = myData.TIMERFOR;
                       txtTimeTo.value = myData.TIMERTO;
                       ddldropStatus.value = myData.STATUS;
                       txtInseruserId.value = myData.INSUSERID;
                       txtInsertime.value = myData.INSTIME;
                       txtinslutude.value = myData.INSLTUDE;
                       txtinseripno.value = myData.INSIPNO;

                       //document.getElementById("txtuserNameID").focus();
                      
                   
                   });
                
                $("#txtuserNameID").val("");
                $("#txtDepartmentNameID").val("");
                $("#txtOperationTypeID").val("");
                $("#txtAddressID").val("");
                $("#txtMobileID").val("");
                $("#txtEmailID").val("");
                $("#dropdownBoxId").val("");
                $("#txtloginID").val("");
                $("#txtpasswordID").val("");
                $("#txtTimeForID").val("");
                $("#txtTimeToID").val("");
                $("#ddldropStatusId").val("");

            });

        });

    </script>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
