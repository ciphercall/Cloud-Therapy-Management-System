@using System.Data
@using System.Data.SqlClient
@using AS_Therapy_GL.Models
@model AS_Therapy_GL.Models.PST_REFER



@{
    ViewBag.Title = "Delete";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    Int64 LoggedCompId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedCompID"]);
    Therapy_GL_DbContext db = new Therapy_GL_DbContext();



    List<SelectListItem> ReferNameList = new List<SelectListItem>();
    var result = (from n in db.PST_ReferDbSet where n.COMPID == LoggedCompId select n).ToList();
    foreach (var n in result)
    {
        ReferNameList.Add(new SelectListItem { Text = n.REFERNM, Value = n.REFERID.ToString() });
    }
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    @Html.HiddenFor(model => model.pst_Refer_Id, new { id = "Hiddentxt_pst_Refer_Id" })
    @Html.HiddenFor(model => model.COMPID, new { id = "HiddentxtCompanyID" })
    @Html.HiddenFor(model => model.REFERNM, new { id = "HiddentxtReferNm" })

    <div id="contentHeaderBox">
        <h1 style="padding-left: 16px">Update Refer Information</h1>
        @if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A")
        {
            var createStatus = "";
            var updateStatus = "";
            var deleteStatus = "";
            var status = "";
            var loggedUserID = HttpContext.Current.Session["loggedUserID"].ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["Therapy_GL_DbContext"].ToString());

            string query1 = string.Format("SELECT STATUS, INSERTR, UPDATER, DELETER FROM ASL_ROLE WHERE  CONTROLLERNAME='PST_Refer' AND COMPID='{0}' AND USERID = '{1}'", LoggedCompId, loggedUserID);

            System.Data.SqlClient.SqlCommand cmd1 = new System.Data.SqlClient.SqlCommand(query1, conn);
            conn.Open();

            SqlDataAdapter da1 = new SqlDataAdapter(cmd1);
            DataTable ds1 = new DataTable();
            da1.Fill(ds1);

            foreach (DataRow row in ds1.Rows)
            {
                status = row["STATUS"].ToString();
                createStatus = row["INSERTR"].ToString();
                updateStatus = row["UPDATER"].ToString();
                deleteStatus = row["DELETER"].ToString();
            }
            conn.Close();


            if (deleteStatus == "A")
            {

            }
            else if (createStatus == "A")
            {
                Response.Redirect("~/PST_Refer/Create");
            }
            else if (updateStatus == "A")
            {
                Response.Redirect("~/PST_Refer/Update");
            }

            if (deleteStatus == "I")
            {
                Response.Redirect("~/GraphView/Index");
            }

            <div class="btn-group pull-right" id="editOption">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                    <i class="fa fa-cog"></i>
                </button>
                <ul class="dropdown-menu pull-right" style="" role="menu">
                    @if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "PST_Refer")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "PST_Refer")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "PST_Refer")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "PST_Refer")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "PST_Refer")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "PST_Refer")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Update", "PST_Refer")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString() && deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "PST_Refer")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                        <li>
                            <a href="@Url.Action("Delete", "PST_Refer")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                    else if (createStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Create", "PST_Refer")"><i class="fa fa-plus"></i> Create</a>
                        </li>
                    }
                    else if (updateStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Update", "PST_Refer")"><i class="fa fa-edit"></i> Update</a>
                        </li>
                    }
                    else if (deleteStatus == 'A'.ToString())
                    {
                        <li>
                            <a href="@Url.Action("Delete", "PST_Refer")"><i class="fa fa-times"></i> Delete</a>
                        </li>
                    }
                </ul>
            </div>

        }

    </div>

    <div class="col-md-12">
        @if (TempData["ReferDeleteMessage"] != null)
        {
            <div class="panel-heading text-center">
                <h4 style="color: #226699">@TempData["ReferDeleteMessage"]</h4>
            </div>
        }

        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Refer Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.REFERID, ReferNameList, "--Select Refer Name--", htmlAttributes: new { id = "ddltxtReferID", @class = "form-control", autofocus = true })
                    @if (TempData["selectReferName"] != null)
                    {
                        <h5 style="color: #C03523">@TempData["selectReferName"]</h5>
                    }
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Address", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ADDRESS, htmlAttributes: new { id = "txtAddress", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Mobile Number 1", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.MOBNO1, htmlAttributes: new { id = "txtMobileNo1", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MOBNO1, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Mobile Number 2", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.MOBNO2, htmlAttributes: new { id = "txtMobileNo2", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.MOBNO2, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Email Id", htmlAttributes: new { @class = "control-label" })
                </div>

                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EMAILID, htmlAttributes: new { id = "txtEmailId", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EMAILID, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "REFER (%)", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.REFPCNT, htmlAttributes: new { id = "txtRefpcnt", @class = "form-control", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.REFPCNT, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-3">
                    @Html.Label("name", "Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-8">
                    @Html.TextAreaFor(model => model.REMARKS, htmlAttributes: new { id = "txtRemarks", @class = "form-control", @readonly = "readonly" })
                </div>
            </div>


            @Html.HiddenFor(model => model.USERPC)
            @Html.HiddenFor(model => model.INSTIME, new { id = "HiddentxtInstime" })
            @Html.HiddenFor(model => model.INSIPNO, new { id = "HiddentxtInsipno" })
            @Html.HiddenFor(model => model.INSLTUDE, new { id = "HiddentxtInsltude" })
            @Html.HiddenFor(model => model.INSUSERID, new { id = "HiddentxtInsuserId" })

            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlon", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />


            <br />
            <div class="row">
                <div class="col-md-3"></div>
                <div class="col-md-6">
                    <input type="submit" class="btn btn-primary btn-block" value="Delete" />
                </div>

            </div>
        </div>
    </div>

    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false"></script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlon").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });



        $(function () {
            //1. Login ID: [    ]Dropdown box
            $('#ddltxtReferID').change(function () {
                //When the UserName (Dropdown list) changed then get the "User ID" from "ASLUSERCO" table
                var changedDropDown = $('#ddltxtReferID option:selected').val();


                var hiddentxt_pst_Refer_Id = document.getElementById('Hiddentxt_pst_Refer_Id');
                var hiddentxtCompanyId = document.getElementById('HiddentxtCompanyID');
                var hiddentxtReferNm = document.getElementById('HiddentxtReferNm');
                var txtAddress = document.getElementById('txtAddress');
                var txtMobileNo1 = document.getElementById('txtMobileNo1');
                var txtMobileNo2 = document.getElementById('txtMobileNo2');
                var txtEmailId = document.getElementById('txtEmailId');
                var txtRefpcnt = document.getElementById('txtRefpcnt');
                var txtRemarks = document.getElementById('txtRemarks');
                var txtInseruserId = document.getElementById('HiddentxtInsuserId');
                var txtInsertime = document.getElementById('HiddentxtInstime');
                var txtinslutude = document.getElementById('HiddentxtInsltude');
                var txtinseripno = document.getElementById('HiddentxtInsipno');

                $.getJSON(
                   "/PST_Refer/GetReferInformation", { "ChangedDropDown": changedDropDown },
                   function (myData) {
                       hiddentxt_pst_Refer_Id.value = myData.pst_Refer_Id;
                       hiddentxtCompanyId.value = myData.COMPID;
                       hiddentxtReferNm.value = myData.REFERNM;
                       txtAddress.value = myData.ADDRESS;
                       txtMobileNo1.value = myData.MOBNO1;
                       txtMobileNo2.value = myData.MOBNO2;
                       txtEmailId.value = myData.EMAILID;
                       txtRefpcnt.value = myData.REFPCNT;
                       txtRemarks.value = myData.REMARKS;
                       txtInseruserId.value = myData.INSUSERID;
                       txtInsertime.value = myData.INSTIME;
                       txtinslutude.value = myData.INSLTUDE;
                       txtinseripno.value = myData.INSIPNO;

                       document.getElementById("ddltxtReferID").focus();


                   });

                $("#Hiddentxt_pst_Refer_Id").val("");
                $("#HiddentxtCompanyID").val("");
                $("#HiddentxtReferNm").val("");

                $("#txtAddress").val("");
                $("#txtMobileNo1").val("");
                $("#txtMobileNo2").val("");
                $("#txtEmailId").val("");
                $("#txtRefpcnt").val("");
                $("#txtRemarks").val("");


            });

        });



    </script>
}


@section Scripts {
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")

}
