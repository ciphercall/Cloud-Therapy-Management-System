@model AS_Therapy_GL.Models.Password

@{
    ViewBag.Title = "PasswordChangedForm";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    var LoggedUserId = HttpContext.Current.Session["loggedUserID"].ToString();

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)


    @Html.HiddenFor(model => model.AslUsercoPasswordCheckModel.COMPID, new { id = "txtCompanyId", @Value = LoggedCompId })
    @Html.HiddenFor(model => model.AslUsercoPasswordCheckModel.USERID, new { id = "txtUserId", @Value = LoggedUserId })

    <div id="contentHeaderBox">
        <h1>Change Password</h1>
    </div>
    <br />


    <div class="col-md-12">
        <div class="form-group">

            <div class="row">
                <div class="col-md-4">
                    @Html.Label("name", "Old Password: ")
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control", id = "txtOldPassword", autofocus = true })
                    @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.Label("name", "New Password: ")
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control", id = "txtNewPassword" })
                    @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="row">
                <div class="col-md-4">
                    @Html.Label("name", "Confirmed Password: ")
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.ConfirmedPassword, new { @class = "form-control", id = "txtNewPassword" })
                    @Html.ValidationMessageFor(model => model.ConfirmedPassword, "", new { @class = "text-danger" })
                </div>
            </div>


            <br />
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-6">
                    <input type="submit" class="btn btn-primary btn-block" value="Create New Password" />
                </div>
            </div>
            @if (ViewBag.NewPassword != null)
            {
                <br />
                <div class="panel-heading text-center">
                    <h4 style="color: #226699">@ViewBag.NewPassword</h4>
                </div>

            }
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}